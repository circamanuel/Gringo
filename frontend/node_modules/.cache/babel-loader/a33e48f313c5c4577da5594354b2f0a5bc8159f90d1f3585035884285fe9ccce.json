{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manu_\\\\Desktop\\\\Gringo\\\\forum-frontend\\\\src\\\\pages\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchPosts } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    forumId\n  } = useParams(); // Extract forumId from the URL\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const postsData = await fetchPosts(forumId);\n        setPosts(postsData || []);\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n        setError('Unable to fetch posts.');\n      }\n    };\n    getPosts();\n  }, [forumId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Posts for Forum \", forumId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Posted by: \", post.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"qxPNCnrqBAyiI7VdiTI9hzOdhjM=\", false, function () {\n  return [useParams];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchPosts","jsxDEV","_jsxDEV","PostList","_s","forumId","posts","setPosts","error","setError","getPosts","postsData","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","content","user","username","id","_c","$RefreshReg$"],"sources":["C:/Users/manu_/Desktop/Gringo/forum-frontend/src/pages/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPosts } from '../services/api';\r\n\r\nconst PostList = () => {\r\n    const { forumId } = useParams(); // Extract forumId from the URL\r\n    const [posts, setPosts] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            try {\r\n                const postsData = await fetchPosts(forumId);\r\n                setPosts(postsData || []);\r\n            } catch (err) {\r\n                console.error('Error fetching posts:', err);\r\n                setError('Unable to fetch posts.');\r\n            }\r\n        };\r\n        getPosts();\r\n    }, [forumId]);\r\n\r\n    if (error) {\r\n        return <p>{error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Posts for Forum {forumId}</h1>\r\n            {posts.length > 0 ? (\r\n                <ul>\r\n                    {posts.map((post) => (\r\n                        <li key={post.id}>\r\n                            <p>{post.content}</p>\r\n                            <small>Posted by: {post.user.username}</small>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No posts available</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EACjC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMC,SAAS,GAAG,MAAMX,UAAU,CAACK,OAAO,CAAC;QAC3CE,QAAQ,CAACI,SAAS,IAAI,EAAE,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACL,KAAK,CAAC,uBAAuB,EAAEI,GAAG,CAAC;QAC3CH,QAAQ,CAAC,wBAAwB,CAAC;MACtC;IACJ,CAAC;IACDC,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,IAAIG,KAAK,EAAE;IACP,oBAAON,OAAA;MAAAY,QAAA,EAAIN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB;EAEA,oBACIhB,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,GAAI,kBAAgB,EAACT,OAAO;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACjCZ,KAAK,CAACa,MAAM,GAAG,CAAC,gBACbjB,OAAA;MAAAY,QAAA,EACKR,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACZnB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,EAAIO,IAAI,CAACC;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBhB,OAAA;UAAAY,QAAA,GAAO,aAAW,EAACO,IAAI,CAACE,IAAI,CAACC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFzCG,IAAI,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELhB,OAAA;MAAAY,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CAvCID,QAAQ;EAAA,QACUJ,SAAS;AAAA;AAAA2B,EAAA,GAD3BvB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}