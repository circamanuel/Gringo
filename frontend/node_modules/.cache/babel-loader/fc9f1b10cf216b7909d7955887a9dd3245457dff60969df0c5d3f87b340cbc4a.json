{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merlini\\\\Desktop\\\\223\\\\Gringo\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchCommentsByForum, addCommentToForum } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  forumId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]); // Liste der Kommentare\n  const [newComment, setNewComment] = useState(''); // Neuer Kommentar\n  const [loading, setLoading] = useState(false); // Ladezustand\n  const [error, setError] = useState(null); // Fehlerzustand\n\n  // Kommentare laden, wenn die Komponente gerendert wird\n  useEffect(() => {\n    const loadComments = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchCommentsByForum(forumId);\n        setComments(data);\n      } catch (err) {\n        console.error('Fehler beim Laden der Kommentare:', err);\n        setError('Fehler beim Laden der Kommentare');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadComments();\n  }, [forumId]);\n\n  // Neuer Kommentar hinzufügen\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    try {\n      setLoading(true);\n      const comment = {\n        content: newComment\n      };\n      const addedComment = await addCommentToForum(forumId, comment);\n      setComments(prev => [...prev, addedComment]);\n      setNewComment(''); // Eingabefeld zurücksetzen\n    } catch (err) {\n      console.error('Fehler beim Hinzufügen des Kommentars:', err);\n      setError('Fehler beim Hinzufügen des Kommentars');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Kommentare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Laden...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comment.author || 'Unbekannt'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), \": \", comment.content]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      placeholder: \"Schreibe einen Kommentar...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddComment,\n      disabled: loading,\n      children: \"Kommentar hinzuf\\xFCgen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"GBK+l+r51zbN4PKRGlsFtyHL1tw=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","fetchCommentsByForum","addCommentToForum","jsxDEV","_jsxDEV","CommentSection","forumId","_s","comments","setComments","newComment","setNewComment","loading","setLoading","error","setError","loadComments","data","err","console","handleAddComment","trim","comment","content","addedComment","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","author","id","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/merlini/Desktop/223/Gringo/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchCommentsByForum, addCommentToForum } from '../api';\r\n\r\nconst CommentSection = ({ forumId }) => {\r\n    const [comments, setComments] = useState([]); // Liste der Kommentare\r\n    const [newComment, setNewComment] = useState(''); // Neuer Kommentar\r\n    const [loading, setLoading] = useState(false); // Ladezustand\r\n    const [error, setError] = useState(null); // Fehlerzustand\r\n\r\n    // Kommentare laden, wenn die Komponente gerendert wird\r\n    useEffect(() => {\r\n        const loadComments = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const data = await fetchCommentsByForum(forumId);\r\n                setComments(data);\r\n            } catch (err) {\r\n                console.error('Fehler beim Laden der Kommentare:', err);\r\n                setError('Fehler beim Laden der Kommentare');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        loadComments();\r\n    }, [forumId]);\r\n\r\n    // Neuer Kommentar hinzufügen\r\n    const handleAddComment = async () => {\r\n        if (!newComment.trim()) return;\r\n\r\n        try {\r\n            setLoading(true);\r\n            const comment = { content: newComment };\r\n            const addedComment = await addCommentToForum(forumId, comment);\r\n            setComments((prev) => [...prev, addedComment]);\r\n            setNewComment(''); // Eingabefeld zurücksetzen\r\n        } catch (err) {\r\n            console.error('Fehler beim Hinzufügen des Kommentars:', err);\r\n            setError('Fehler beim Hinzufügen des Kommentars');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Kommentare</h2>\r\n            {loading && <p>Laden...</p>}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {comments.map((comment) => (\r\n                    <li key={comment.id}>\r\n                        <strong>{comment.author || 'Unbekannt'}</strong>: {comment.content}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <textarea\r\n                value={newComment}\r\n                onChange={(e) => setNewComment(e.target.value)}\r\n                placeholder=\"Schreibe einen Kommentar...\"\r\n            ></textarea>\r\n            <button onClick={handleAddComment} disabled={loading}>\r\n                Kommentar hinzufügen\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}