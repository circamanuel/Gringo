{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manu_\\\\Desktop\\\\Gringo\\\\forum-frontend\\\\src\\\\pages\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchPostsByForum, createPost } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    forumId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [newPostContent, setNewPostContent] = useState('');\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const data = await fetchPostsByForum(forumId);\n        setPosts(data);\n      } catch (error) {\n        console.error('Failed to load posts:', error);\n      }\n    };\n    loadPosts();\n  }, [forumId]);\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    try {\n      await createPost({\n        forumId,\n        content: newPostContent\n      });\n      setNewPostContent('');\n      // Reload posts\n      const updatedPosts = await fetchPostsByForum(forumId);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Failed to create post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"By: \", post.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available for this forum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newPostContent,\n        onChange: e => setNewPostContent(e.target.value),\n        placeholder: \"Write your post...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"hkPDuzctYqWxSu88Gi3w6PCpKIY=\", false, function () {\n  return [useParams];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchPostsByForum","createPost","jsxDEV","_jsxDEV","PostList","_s","forumId","posts","setPosts","newPostContent","setNewPostContent","loadPosts","data","error","console","handlePostSubmit","e","preventDefault","content","updatedPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","user","username","id","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/manu_/Desktop/Gringo/forum-frontend/src/pages/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPostsByForum, createPost } from '../services/api';\r\n\r\nconst PostList = () => {\r\n    const { forumId } = useParams();\r\n    const [posts, setPosts] = useState([]);\r\n    const [newPostContent, setNewPostContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        const loadPosts = async () => {\r\n            try {\r\n                const data = await fetchPostsByForum(forumId);\r\n                setPosts(data);\r\n            } catch (error) {\r\n                console.error('Failed to load posts:', error);\r\n            }\r\n        };\r\n\r\n        loadPosts();\r\n    }, [forumId]);\r\n\r\n    const handlePostSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await createPost({ forumId, content: newPostContent });\r\n            setNewPostContent('');\r\n            // Reload posts\r\n            const updatedPosts = await fetchPostsByForum(forumId);\r\n            setPosts(updatedPosts);\r\n        } catch (error) {\r\n            console.error('Failed to create post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Posts</h1>\r\n            {posts.length > 0 ? (\r\n                <ul>\r\n                    {posts.map((post) => (\r\n                        <li key={post.id}>\r\n                            <p>{post.content}</p>\r\n                            <small>By: {post.user.username}</small>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No posts available for this forum</p>\r\n            )}\r\n\r\n            <h2>Create a New Post</h2>\r\n            <form onSubmit={handlePostSubmit}>\r\n                <textarea\r\n                    value={newPostContent}\r\n                    onChange={(e) => setNewPostContent(e.target.value)}\r\n                    placeholder=\"Write your post...\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}