{"ast":null,"code":"const BASE_URL = 'http://localhost:8080/api';\nexport const fetchForums = async () => {\n  const response = await fetch(`${BASE_URL}/forums`);\n  return response.json();\n};\nexport const createForum = async forum => {\n  const token = localStorage.getItem('token');\n  await fetch(`${BASE_URL}/forums`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(forum)\n  });\n};\nexport const fetchPosts = async () => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  return response.json();\n};\nexport const login = async credentials => {\n  const response = await fetch(`${BASE_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n  const data = await response.json();\n  return data.token;\n};\nexport const register = async credentials => {\n  await fetch(`${BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n};","map":{"version":3,"names":["BASE_URL","fetchForums","response","fetch","json","createForum","forum","token","localStorage","getItem","method","headers","Authorization","body","JSON","stringify","fetchPosts","login","credentials","data","register"],"sources":["C:/Users/manu_/Desktop/Gringo/forum-frontend/src/services/api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:8080/api';\r\n\r\nexport const fetchForums = async () => {\r\n    const response = await fetch(`${BASE_URL}/forums`);\r\n    return response.json();\r\n};\r\n\r\nexport const createForum = async (forum) => {\r\n    const token = localStorage.getItem('token');\r\n    await fetch(`${BASE_URL}/forums`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(forum),\r\n    });\r\n};\r\n\r\nexport const fetchPosts = async () => {\r\n    const response = await fetch(`${BASE_URL}/posts`);\r\n    return response.json();\r\n};\r\n\r\nexport const login = async (credentials) => {\r\n    const response = await fetch(`${BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(credentials),\r\n    });\r\n    const data = await response.json();\r\n    return data.token;\r\n};\r\n\r\nexport const register = async (credentials) => {\r\n    await fetch(`${BASE_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(credentials),\r\n    });\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,SAAS,CAAC;EAClD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMN,KAAK,CAAC,GAAGH,QAAQ,SAAS,EAAE;IAC9BU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,UAAUL,KAAK;IAClC,CAAC;IACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK;EAC9B,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,QAAQ,CAAC;EACjD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMa,KAAK,GAAG,MAAOC,WAAW,IAAK;EACxC,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,aAAa,EAAE;IACnDU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,WAAW;EACpC,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMjB,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,OAAOe,IAAI,CAACZ,KAAK;AACrB,CAAC;AAED,OAAO,MAAMa,QAAQ,GAAG,MAAOF,WAAW,IAAK;EAC3C,MAAMf,KAAK,CAAC,GAAGH,QAAQ,gBAAgB,EAAE;IACrCU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,WAAW;EACpC,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}