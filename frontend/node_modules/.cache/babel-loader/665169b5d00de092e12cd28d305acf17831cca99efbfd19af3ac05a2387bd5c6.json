{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manu_\\\\Desktop\\\\Gringo\\\\forum-frontend\\\\src\\\\pages\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchPostsByUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    username\n  } = useParams(); // Get the username from URL parameters\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const data = await fetchPostsByUser(username);\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching user posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (username) {\n      loadPosts();\n    }\n  }, [username]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Posts by \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Forum: \", post.forum.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available for this user.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"8P8yuIxzZnxIW50Xg0JJAT/utTM=\", false, function () {\n  return [useParams];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchPostsByUser","jsxDEV","_jsxDEV","PostList","_s","username","posts","setPosts","loading","setLoading","loadPosts","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","content","forum","title","id","_c","$RefreshReg$"],"sources":["C:/Users/manu_/Desktop/Gringo/forum-frontend/src/pages/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPostsByUser } from '../services/api';\r\n\r\nconst PostList = () => {\r\n    const { username } = useParams(); // Get the username from URL parameters\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const loadPosts = async () => {\r\n            try {\r\n                const data = await fetchPostsByUser(username);\r\n                setPosts(data);\r\n            } catch (error) {\r\n                console.error('Error fetching user posts:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (username) {\r\n            loadPosts();\r\n        }\r\n    }, [username]);\r\n\r\n    if (loading) {\r\n        return <p>Loading posts...</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Posts by {username}</h1>\r\n            {posts.length > 0 ? (\r\n                <ul>\r\n                    {posts.map((post) => (\r\n                        <li key={post.id}>\r\n                            <h3>{post.content}</h3>\r\n                            <p>Forum: {post.forum.title}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No posts available for this user.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAClC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMX,gBAAgB,CAACK,QAAQ,CAAC;QAC7CE,QAAQ,CAACI,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD,CAAC,SAAS;QACNH,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAED,IAAIJ,QAAQ,EAAE;MACVK,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,IAAIG,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAY,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,oBACIhB,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,GAAI,WAAS,EAACT,QAAQ;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC3BZ,KAAK,CAACa,MAAM,GAAG,CAAC,gBACbjB,OAAA;MAAAY,QAAA,EACKR,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACZnB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,EAAKO,IAAI,CAACC;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBhB,OAAA;UAAAY,QAAA,GAAG,SAAO,EAACO,IAAI,CAACE,KAAK,CAACC,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAF3BG,IAAI,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELhB,OAAA;MAAAY,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CA3CID,QAAQ;EAAA,QACWJ,SAAS;AAAA;AAAA2B,EAAA,GAD5BvB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}