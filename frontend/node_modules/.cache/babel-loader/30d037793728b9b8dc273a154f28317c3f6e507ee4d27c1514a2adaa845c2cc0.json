{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manu_\\\\Desktop\\\\Gringo\\\\frontend\\\\src\\\\pages\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchPostsByForum, createPost } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    forumId\n  } = useParams(); // Extract forumId from the route parameters\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState('');\n\n  // Fetch posts for the given forum ID\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const postsData = await fetchPostsByForum(forumId);\n        setPosts(postsData);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    getPosts();\n  }, [forumId]);\n\n  // Handle the creation of a new post\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    try {\n      await createPost({\n        forumId: parseInt(forumId, 10),\n        // Ensure forumId is passed as an integer\n        content: content.trim(),\n        // Remove unnecessary whitespace\n        username: localStorage.getItem('username') // Use the logged-in username\n      });\n      setContent(''); // Clear the input field\n      const updatedPosts = await fetchPostsByForum(forumId); // Refresh the post list\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Posts in Forum \", forumId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Created by: \", post.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Write a post...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"X3Gt5zWR3soh9pCKpShGNkKg+bs=\", false, function () {\n  return [useParams];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchPostsByForum","createPost","jsxDEV","_jsxDEV","PostList","_s","forumId","posts","setPosts","content","setContent","getPosts","postsData","error","console","handlePostSubmit","e","preventDefault","parseInt","trim","username","localStorage","getItem","updatedPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","user","id","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/manu_/Desktop/Gringo/frontend/src/pages/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPostsByForum, createPost } from '../services/api';\r\n\r\nconst PostList = () => {\r\n    const { forumId } = useParams(); // Extract forumId from the route parameters\r\n    const [posts, setPosts] = useState([]);\r\n    const [content, setContent] = useState('');\r\n\r\n    // Fetch posts for the given forum ID\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            try {\r\n                const postsData = await fetchPostsByForum(forumId);\r\n                setPosts(postsData);\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error);\r\n            }\r\n        };\r\n\r\n        getPosts();\r\n    }, [forumId]);\r\n\r\n    // Handle the creation of a new post\r\n    const handlePostSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await createPost({\r\n                forumId: parseInt(forumId, 10), // Ensure forumId is passed as an integer\r\n                content: content.trim(), // Remove unnecessary whitespace\r\n                username: localStorage.getItem('username'), // Use the logged-in username\r\n            });\r\n            setContent(''); // Clear the input field\r\n            const updatedPosts = await fetchPostsByForum(forumId); // Refresh the post list\r\n            setPosts(updatedPosts);\r\n        } catch (error) {\r\n            console.error('Error creating post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Posts in Forum {forumId}</h1>\r\n            <ul>\r\n                {posts.map((post) => (\r\n                    <li key={post.id}>\r\n                        <p>{post.content}</p>\r\n                        <small>Created by: {post.user.username}</small>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <form onSubmit={handlePostSubmit}>\r\n                <textarea\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    placeholder=\"Write a post...\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit Post</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}