{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manu_\\\\Desktop\\\\Gringo\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { register } from '../services/api'; // Import the API function for user registration\n\n/**\r\n * Register Component\r\n *\r\n * This component provides a registration form where users can enter their\r\n * username and password to create a new account. Upon successful registration,\r\n * the user is redirected to the login page.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  // State to manage user input for username and password\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n\n  /**\r\n   * Handles form submission.\r\n   * - Prevents the default form behavior (page reload).\r\n   * - Calls the `register` function to create a new user account.\r\n   * - Redirects the user to the login page upon successful registration.\r\n   * - Logs errors if the registration fails.\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevents the default form submission behavior\n\n    try {\n      await register(credentials); // Calls the API to register a new user\n      window.location.href = '/login'; // Redirects the user to the login page after successful registration\n    } catch (error) {\n      console.error('Error registering:', error); // Logs any errors if registration fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: credentials.username,\n      onChange: e => setCredentials({\n        ...credentials,\n        username: e.target.value\n      }),\n      required: true // Ensures the field is not left empty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: credentials.password,\n      onChange: e => setCredentials({\n        ...credentials,\n        password: e.target.value\n      }),\n      required: true // Ensures the field is not left empty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"rueEJbdnZgcg1jOuSt/nqRO3DUA=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","register","jsxDEV","_jsxDEV","Register","_s","credentials","setCredentials","username","password","handleSubmit","e","preventDefault","window","location","href","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/manu_/Desktop/Gringo/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { register } from '../services/api'; // Import the API function for user registration\r\n\r\n/**\r\n * Register Component\r\n *\r\n * This component provides a registration form where users can enter their\r\n * username and password to create a new account. Upon successful registration,\r\n * the user is redirected to the login page.\r\n */\r\nconst Register = () => {\r\n    // State to manage user input for username and password\r\n    const [credentials, setCredentials] = useState({ username: '', password: '' });\r\n\r\n    /**\r\n     * Handles form submission.\r\n     * - Prevents the default form behavior (page reload).\r\n     * - Calls the `register` function to create a new user account.\r\n     * - Redirects the user to the login page upon successful registration.\r\n     * - Logs errors if the registration fails.\r\n     */\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevents the default form submission behavior\r\n\r\n        try {\r\n            await register(credentials); // Calls the API to register a new user\r\n            window.location.href = '/login'; // Redirects the user to the login page after successful registration\r\n        } catch (error) {\r\n            console.error('Error registering:', error); // Logs any errors if registration fails\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>Register</h1>\r\n\r\n            {/* Username Input Field */}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={credentials.username}\r\n                onChange={(e) => setCredentials({ ...credentials, username: e.target.value })}\r\n                required // Ensures the field is not left empty\r\n            />\r\n\r\n            {/* Password Input Field */}\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={credentials.password}\r\n                onChange={(e) => setCredentials({ ...credentials, password: e.target.value })}\r\n                required // Ensures the field is not left empty\r\n            />\r\n\r\n            {/* Submit Button */}\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,iBAAiB,CAAC,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;;EAE9E;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,IAAI;MACA,MAAMX,QAAQ,CAACK,WAAW,CAAC,CAAC,CAAC;MAC7BO,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC,CAAC;IAChD;EACJ,CAAC;EAED,oBACIb,OAAA;IAAMe,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBACzBhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGjBpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEpB,WAAW,CAACE,QAAS;MAC5BmB,QAAQ,EAAGhB,CAAC,IAAKJ,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEE,QAAQ,EAAEG,CAAC,CAACiB,MAAM,CAACF;MAAM,CAAC,CAAE;MAC9EG,QAAQ,OAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGFpB,OAAA;MACIqB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEpB,WAAW,CAACG,QAAS;MAC5BkB,QAAQ,EAAGhB,CAAC,IAAKJ,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEG,QAAQ,EAAEE,CAAC,CAACiB,MAAM,CAACF;MAAM,CAAC,CAAE;MAC9EG,QAAQ,OAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGFpB,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf,CAAC;AAAClB,EAAA,CAhDID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}