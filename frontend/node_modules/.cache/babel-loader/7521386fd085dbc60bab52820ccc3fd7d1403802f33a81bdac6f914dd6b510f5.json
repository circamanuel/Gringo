{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manu_\\\\Desktop\\\\Gringo\\\\forum-frontend\\\\src\\\\pages\\\\ForumDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchPostsByForum, createPost } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForumDetail = () => {\n  _s();\n  const {\n    forumId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const data = await fetchPostsByForum(forumId);\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    loadPosts();\n  }, [forumId]);\n  const handleCreatePost = async e => {\n    e.preventDefault();\n    try {\n      await createPost({\n        content,\n        forumId\n      });\n      setContent('');\n      const data = await fetchPostsByForum(forumId);\n      setPosts(data);\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forum Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Created by: \", post.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Write your post here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ForumDetail, \"X3Gt5zWR3soh9pCKpShGNkKg+bs=\", false, function () {\n  return [useParams];\n});\n_c = ForumDetail;\nexport default ForumDetail;\nvar _c;\n$RefreshReg$(_c, \"ForumDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchPostsByForum","createPost","jsxDEV","_jsxDEV","ForumDetail","_s","forumId","posts","setPosts","content","setContent","loadPosts","data","error","console","handleCreatePost","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","user","username","id","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/manu_/Desktop/Gringo/forum-frontend/src/pages/ForumDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPostsByForum, createPost } from '../services/api';\r\n\r\nconst ForumDetail = () => {\r\n    const { forumId } = useParams();\r\n    const [posts, setPosts] = useState([]);\r\n    const [content, setContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        const loadPosts = async () => {\r\n            try {\r\n                const data = await fetchPostsByForum(forumId);\r\n                setPosts(data);\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error);\r\n            }\r\n        };\r\n\r\n        loadPosts();\r\n    }, [forumId]);\r\n\r\n    const handleCreatePost = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await createPost({ content, forumId });\r\n            setContent('');\r\n            const data = await fetchPostsByForum(forumId);\r\n            setPosts(data);\r\n        } catch (error) {\r\n            console.error('Error creating post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Forum Posts</h1>\r\n            <ul>\r\n                {posts.map((post) => (\r\n                    <li key={post.id}>\r\n                        <p>{post.content}</p>\r\n                        <small>Created by: {post.user.username}</small>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <form onSubmit={handleCreatePost}>\r\n                <textarea\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    placeholder=\"Write your post here\"\r\n                ></textarea>\r\n                <button type=\"submit\">Create Post</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForumDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}