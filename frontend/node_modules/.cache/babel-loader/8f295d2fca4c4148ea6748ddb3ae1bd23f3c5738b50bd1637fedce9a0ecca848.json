{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manu_\\\\Desktop\\\\Gringo\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\n// Import der Navigationsleiste und der Seitenkomponenten\nimport NavBar from './components/NavBar';\nimport ForumList from './pages/ForumList';\nimport CreateForum from './pages/CreateForum';\nimport PostList from './pages/PostList';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\n\n/**\r\n * Hauptkomponente der Anwendung\r\n * Diese Komponente verwaltet die Routen und die Navigation zwischen den Seiten.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // Überprüft, ob ein Benutzer authentifiziert ist, basierend auf dem gespeicherten Token\n  const isAuthenticated = (() => {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    try {\n      // Überprüfen, ob der Token abgelaufen ist (falls JWT verwendet wird)\n      const {\n        exp\n      } = JSON.parse(atob(token.split('.')[1]));\n      return exp * 1000 > Date.now();\n    } catch (error) {\n      console.error('Ungültiger Token:', error);\n      return false;\n    }\n  })();\n  return (\n    /*#__PURE__*/\n    // Router-Komponente für die Verwaltung der Navigation\n    _jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/forums\",\n          element: /*#__PURE__*/_jsxDEV(ForumList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create-forum\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(CreateForum, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this) :\n          /*#__PURE__*/\n          // Wenn nicht authentifiziert, wird der Benutzer zur Login-Seite weitergeleitet\n          _jsxDEV(Navigate, {\n            to: \"/login\",\n            state: {\n              from: '/create-forum'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/posts/:forumId\",\n          element: /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user-posts/:username\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this) :\n          /*#__PURE__*/\n          // Weiterleitung zur Login-Seite, wenn nicht authentifiziert\n          _jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/forums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navigate","NavBar","ForumList","CreateForum","PostList","Login","Register","jsxDEV","_jsxDEV","App","isAuthenticated","token","localStorage","getItem","exp","JSON","parse","atob","split","Date","now","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","state","from","_c","$RefreshReg$"],"sources":["C:/Users/manu_/Desktop/Gringo/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\n// Import der Navigationsleiste und der Seitenkomponenten\r\nimport NavBar from './components/NavBar';\r\nimport ForumList from './pages/ForumList';\r\nimport CreateForum from './pages/CreateForum';\r\nimport PostList from './pages/PostList';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\n\r\n/**\r\n * Hauptkomponente der Anwendung\r\n * Diese Komponente verwaltet die Routen und die Navigation zwischen den Seiten.\r\n */\r\nconst App = () => {\r\n    // Überprüft, ob ein Benutzer authentifiziert ist, basierend auf dem gespeicherten Token\r\n    const isAuthenticated = (() => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) return false;\r\n\r\n        try {\r\n            // Überprüfen, ob der Token abgelaufen ist (falls JWT verwendet wird)\r\n            const { exp } = JSON.parse(atob(token.split('.')[1]));\r\n            return exp * 1000 > Date.now();\r\n        } catch (error) {\r\n            console.error('Ungültiger Token:', error);\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    return (\r\n        // Router-Komponente für die Verwaltung der Navigation\r\n        <Router>\r\n            {/* Navigationsleiste */}\r\n            <NavBar />\r\n            {/* Definieren der Routen */}\r\n            <Routes>\r\n                {/* Route für die Liste der Foren */}\r\n                <Route path=\"/forums\" element={<ForumList />} />\r\n\r\n                {/* Routen für die Authentifizierung */}\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/register\" element={<Register />} />\r\n\r\n                {/* Route für das Erstellen eines neuen Forums */}\r\n                <Route\r\n                    path=\"/create-forum\"\r\n                    element={\r\n                        isAuthenticated ? (\r\n                            <CreateForum />\r\n                        ) : (\r\n                            // Wenn nicht authentifiziert, wird der Benutzer zur Login-Seite weitergeleitet\r\n                            <Navigate to=\"/login\" state={{ from: '/create-forum' }} />\r\n                        )\r\n                    }\r\n                />\r\n\r\n                {/* Route für die Liste der Beiträge in einem bestimmten Forum */}\r\n                <Route path=\"/posts/:forumId\" element={<PostList />} />\r\n\r\n                {/* Route für die Beiträge eines bestimmten Benutzers */}\r\n                <Route\r\n                    path=\"/user-posts/:username\"\r\n                    element={\r\n                        isAuthenticated ? (\r\n                            <PostList />\r\n                        ) : (\r\n                            // Weiterleitung zur Login-Seite, wenn nicht authentifiziert\r\n                            <Navigate to=\"/login\" />\r\n                        )\r\n                    }\r\n                />\r\n\r\n                {/* Catch-All-Route für ungültige URLs, leitet auf die Forumsliste um */}\r\n                <Route path=\"*\" element={<Navigate to=\"/forums\" />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd;EACA,MAAMC,eAAe,GAAG,CAAC,MAAM;IAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK;IAExB,IAAI;MACA;MACA,MAAM;QAAEG;MAAI,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,OAAOJ,GAAG,GAAG,IAAI,GAAGK,IAAI,CAACC,GAAG,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,OAAO,KAAK;IAChB;EACJ,CAAC,EAAE,CAAC;EAEJ;IAAA;IACI;IACAb,OAAA,CAACX,MAAM;MAAA0B,QAAA,gBAEHf,OAAA,CAACP,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEVnB,OAAA,CAACT,MAAM;QAAAwB,QAAA,gBAEHf,OAAA,CAACV,KAAK;UAAC8B,IAAI,EAAC,SAAS;UAACC,OAAO,eAAErB,OAAA,CAACN,SAAS;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGhDnB,OAAA,CAACV,KAAK;UAAC8B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAErB,OAAA,CAACH,KAAK;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3CnB,OAAA,CAACV,KAAK;UAAC8B,IAAI,EAAC,WAAW;UAACC,OAAO,eAAErB,OAAA,CAACF,QAAQ;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGjDnB,OAAA,CAACV,KAAK;UACF8B,IAAI,EAAC,eAAe;UACpBC,OAAO,EACHnB,eAAe,gBACXF,OAAA,CAACL,WAAW;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;UAAA;UAEf;UACAnB,OAAA,CAACR,QAAQ;YAAC8B,EAAE,EAAC,QAAQ;YAACC,KAAK,EAAE;cAAEC,IAAI,EAAE;YAAgB;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAEhE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAGFnB,OAAA,CAACV,KAAK;UAAC8B,IAAI,EAAC,iBAAiB;UAACC,OAAO,eAAErB,OAAA,CAACJ,QAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGvDnB,OAAA,CAACV,KAAK;UACF8B,IAAI,EAAC,uBAAuB;UAC5BC,OAAO,EACHnB,eAAe,gBACXF,OAAA,CAACJ,QAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;UAAA;UAEZ;UACAnB,OAAA,CAACR,QAAQ;YAAC8B,EAAE,EAAC;UAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAE9B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAGFnB,OAAA,CAACV,KAAK;UAAC8B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAErB,OAAA,CAACR,QAAQ;YAAC8B,EAAE,EAAC;UAAS;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEjB,CAAC;AAACM,EAAA,GAhEIxB,GAAG;AAkET,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}