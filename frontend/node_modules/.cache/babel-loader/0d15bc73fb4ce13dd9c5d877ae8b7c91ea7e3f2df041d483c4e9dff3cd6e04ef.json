{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merlini\\\\Desktop\\\\223\\\\Gringo\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchCommentsByForum, addCommentToForum } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  forumId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadComments = async () => {\n      try {\n        const data = await fetchCommentsByForum(forumId);\n        setComments(data);\n      } catch (err) {\n        setError('Error loading comments');\n      }\n    };\n    loadComments();\n  }, [forumId]);\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    try {\n      setLoading(true);\n      const comment = {\n        content: newComment\n      };\n      await addCommentToForum(forumId, comment);\n      setComments(prevComments => [...prevComments, comment]);\n      setNewComment('');\n    } catch (err) {\n      setError('Error adding comment');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      placeholder: \"Add a comment...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddComment,\n      disabled: loading,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentSection, \"GBK+l+r51zbN4PKRGlsFtyHL1tw=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","fetchCommentsByForum","addCommentToForum","jsxDEV","_jsxDEV","CommentSection","forumId","_s","comments","setComments","newComment","setNewComment","loading","setLoading","error","setError","loadComments","data","err","handleAddComment","trim","comment","content","prevComments","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","index","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/merlini/Desktop/223/Gringo/frontend/src/components/CommentSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchCommentsByForum, addCommentToForum } from '../services/api';\r\n\r\nconst CommentSection = ({ forumId }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loadComments = async () => {\r\n            try {\r\n                const data = await fetchCommentsByForum(forumId);\r\n                setComments(data);\r\n            } catch (err) {\r\n                setError('Error loading comments');\r\n            }\r\n        };\r\n\r\n        loadComments();\r\n    }, [forumId]);\r\n\r\n    const handleAddComment = async () => {\r\n        if (!newComment.trim()) return;\r\n\r\n        try {\r\n            setLoading(true);\r\n            const comment = { content: newComment };\r\n            await addCommentToForum(forumId, comment);\r\n            setComments((prevComments) => [...prevComments, comment]);\r\n            setNewComment('');\r\n        } catch (err) {\r\n            setError('Error adding comment');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Comments</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {comments.map((comment, index) => (\r\n                    <li key={index}>{comment.content}</li>\r\n                ))}\r\n            </ul>\r\n            <textarea\r\n                value={newComment}\r\n                onChange={(e) => setNewComment(e.target.value)}\r\n                placeholder=\"Add a comment...\"\r\n            ></textarea>\r\n            <button onClick={handleAddComment} disabled={loading}>\r\n                Submit\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentSection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,oBAAoB,EAAEC,iBAAiB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMhB,oBAAoB,CAACK,OAAO,CAAC;QAChDG,WAAW,CAACQ,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVH,QAAQ,CAAC,wBAAwB,CAAC;MACtC;IACJ,CAAC;IAEDC,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC;EAEb,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACT,UAAU,CAACU,IAAI,CAAC,CAAC,EAAE;IAExB,IAAI;MACAP,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMQ,OAAO,GAAG;QAAEC,OAAO,EAAEZ;MAAW,CAAC;MACvC,MAAMR,iBAAiB,CAACI,OAAO,EAAEe,OAAO,CAAC;MACzCZ,WAAW,CAAEc,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,OAAO,CAAC,CAAC;MACzDV,aAAa,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVH,QAAQ,CAAC,sBAAsB,CAAC;IACpC,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBd,KAAK,iBAAIV,OAAA;MAAGyB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDxB,OAAA;MAAAoB,QAAA,EACKhB,QAAQ,CAACuB,GAAG,CAAC,CAACV,OAAO,EAAEW,KAAK,kBACzB5B,OAAA;QAAAoB,QAAA,EAAiBH,OAAO,CAACC;MAAO,GAAvBU,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLxB,OAAA;MACI6B,KAAK,EAAEvB,UAAW;MAClBwB,QAAQ,EAAGC,CAAC,IAAKxB,aAAa,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAkB;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACZxB,OAAA;MAAQkC,OAAO,EAAEnB,gBAAiB;MAACoB,QAAQ,EAAE3B,OAAQ;MAAAY,QAAA,EAAC;IAEtD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACrB,EAAA,CAtDIF,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAwDpB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}