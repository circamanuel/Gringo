{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manu_\\\\Desktop\\\\Gringo\\\\frontend\\\\src\\\\pages\\\\ForumDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/App.css'; // Importiere die CSS-Datei\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForumDetail() {\n  _s();\n  const {\n    forumId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/api/posts?forumId=${forumId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPosts(data);\n      }\n    };\n    fetchPosts();\n  }, [forumId]);\n  const handlePostSubmit = async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch('http://localhost:8080/api/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        forumId: parseInt(forumId, 10),\n        content: newPost,\n        username: 'testuser' // Dies sollte idealerweise dynamisch sein\n      })\n    });\n    if (response.ok) {\n      alert('Post erfolgreich erstellt!');\n      setNewPost('');\n      const newPostResponse = await response.json();\n      setPosts(prevPosts => [...prevPosts, newPostResponse]);\n    } else {\n      alert('Fehler beim Erstellen des Posts');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forum Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-content\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-username\",\n          children: [\"by \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Neuen Post erstellen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newPost,\n      onChange: e => setNewPost(e.target.value),\n      placeholder: \"Schreibe deinen Post...\",\n      className: \"post-textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePostSubmit,\n      className: \"post-button\",\n      children: \"Post erstellen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ForumDetail, \"SA8wR1mtFwNgylP/4+ePTpHD7Y8=\", false, function () {\n  return [useParams];\n});\n_c = ForumDetail;\nexport default ForumDetail;\nvar _c;\n$RefreshReg$(_c, \"ForumDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","ForumDetail","_s","forumId","posts","setPosts","newPost","setNewPost","fetchPosts","token","localStorage","getItem","response","fetch","headers","ok","data","json","handlePostSubmit","method","body","JSON","stringify","parseInt","content","username","alert","newPostResponse","prevPosts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","id","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/manu_/Desktop/Gringo/frontend/src/pages/ForumDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/App.css'; // Importiere die CSS-Datei\r\n\r\nfunction ForumDetail() {\r\n    const { forumId } = useParams();\r\n    const [posts, setPosts] = useState([]);\r\n    const [newPost, setNewPost] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch(`http://localhost:8080/api/posts?forumId=${forumId}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setPosts(data);\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, [forumId]);\r\n\r\n    const handlePostSubmit = async () => {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch('http://localhost:8080/api/posts', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                forumId: parseInt(forumId, 10),\r\n                content: newPost,\r\n                username: 'testuser', // Dies sollte idealerweise dynamisch sein\r\n            }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            alert('Post erfolgreich erstellt!');\r\n            setNewPost('');\r\n            const newPostResponse = await response.json();\r\n            setPosts((prevPosts) => [...prevPosts, newPostResponse]);\r\n        } else {\r\n            alert('Fehler beim Erstellen des Posts');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"forum-detail\">\r\n            <h1>Forum Details</h1>\r\n            <h2>Posts</h2>\r\n            <div className=\"posts-container\">\r\n                {posts.map((post) => (\r\n                    <div key={post.id} className=\"post-item\">\r\n                        <p className=\"post-content\">{post.content}</p>\r\n                        <p className=\"post-username\">by {post.username}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <h2>Neuen Post erstellen</h2>\r\n            <textarea\r\n                value={newPost}\r\n                onChange={(e) => setNewPost(e.target.value)}\r\n                placeholder=\"Schreibe deinen Post...\"\r\n                className=\"post-textarea\"\r\n            />\r\n            <button onClick={handlePostSubmit} className=\"post-button\">Post erstellen</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForumDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2CV,OAAO,EAAE,EAAE;QAC/EW,OAAO,EAAE;UACL,eAAe,EAAE,UAAUL,KAAK;QACpC;MACJ,CAAC,CAAC;MACF,IAAIG,QAAQ,CAACG,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCZ,QAAQ,CAACW,IAAI,CAAC;MAClB;IACJ,CAAC;IACDR,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DM,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUL,KAAK;MACpC,CAAC;MACDW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBnB,OAAO,EAAEoB,QAAQ,CAACpB,OAAO,EAAE,EAAE,CAAC;QAC9BqB,OAAO,EAAElB,OAAO;QAChBmB,QAAQ,EAAE,UAAU,CAAE;MAC1B,CAAC;IACL,CAAC,CAAC;IAEF,IAAIb,QAAQ,CAACG,EAAE,EAAE;MACbW,KAAK,CAAC,4BAA4B,CAAC;MACnCnB,UAAU,CAAC,EAAE,CAAC;MACd,MAAMoB,eAAe,GAAG,MAAMf,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC7CZ,QAAQ,CAAEuB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,eAAe,CAAC,CAAC;IAC5D,CAAC,MAAM;MACHD,KAAK,CAAC,iCAAiC,CAAC;IAC5C;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAK6B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzB9B,OAAA;MAAA8B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlC,OAAA;MAAA8B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdlC,OAAA;MAAK6B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3B1B,KAAK,CAAC+B,GAAG,CAAEC,IAAI,iBACZpC,OAAA;QAAmB6B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACpC9B,OAAA;UAAG6B,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEM,IAAI,CAACZ;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9ClC,OAAA;UAAG6B,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAC,KAAG,EAACM,IAAI,CAACX,QAAQ;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAF7CE,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNlC,OAAA;MAAA8B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlC,OAAA;MACIsC,KAAK,EAAEhC,OAAQ;MACfiC,QAAQ,EAAGC,CAAC,IAAKjC,UAAU,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC,yBAAyB;MACrCb,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFlC,OAAA;MAAQ2C,OAAO,EAAEzB,gBAAiB;MAACW,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEd;AAAChC,EAAA,CApEQD,WAAW;EAAA,QACIH,SAAS;AAAA;AAAA8C,EAAA,GADxB3C,WAAW;AAsEpB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}